.container {
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  padding: 1rem;
  background: var(--bg-primary);
}

.header {
  display: flex;
  justify-content: center; /* Center the round counter */
  align-items: center;
  width: 100%;
  margin-bottom: 2rem;
  position: relative; /* Needed for absolute positioning of children */
  text-align: center;
}

.quitButton {
  position: absolute;
  left: 0;
  top: 50%;
  transform: translateY(-50%);
  background: var(--background-light);
  border: 1px solid var(--border-color);
  color: var(--text-secondary);
  padding: 0.6rem 1.2rem;
  border-radius: var(--radius-lg);
  cursor: pointer;
  transition: var(--transition-normal);
  display: flex;
  align-items: center;
  gap: 0.5rem;
  font-size: 1rem;
  font-weight: 500;
}

.quitButton:hover {
  background: var(--background-lighter);
  border-color: var(--text-primary);
  color: var(--text-primary);
}

.gameInfo {
  display: flex;
  gap: 2rem;
  font-weight: 600;
}

.round {
  color: var(--text-primary);
}

.roundCounter {
  font-size: 1.5rem;
  font-weight: 600;
}

.score {
  position: absolute;
  right: 0;
  top: 50%;
  transform: translateY(-50%);
  font-size: 1.25rem;
  font-weight: 500;
  color: var(--text-secondary);
}

.timer {
  position: relative;
  width: 200px;
  height: 8px;
  background: var(--bg-secondary);
  border-radius: var(--radius-sm);
  overflow: hidden;
}

.timerBar {
  height: 100%;
  background: var(--accent-primary);
  transition: width 1s linear;
  border-radius: var(--radius-sm);
}

.timerText {
  position: absolute;
  top: -25px;
  right: 0;
  font-size: 0.875rem;
  font-weight: 600;
  color: var(--text-primary);
}

.gameArea {
  flex: 1;
  display: flex;
  flex-direction: column; /* Ensure vertical layout */
  align-items: center;
  justify-content: center;
  padding: 1rem; /* Reduced padding */
}

.startScreen {
  text-align: center;
  max-width: 500px;
}

.instructions h2 {
  font-size: 2rem;
  margin-bottom: 1rem;
  color: var(--text-primary);
}

.instructions p {
  font-size: 1.125rem;
  color: var(--text-secondary);
  margin-bottom: 1rem;
}

.categoryInfo {
  font-size: 1rem;
  color: var(--text-muted);
}

.categoryInfo span {
  color: var(--accent-primary);
  font-weight: 600;
  text-transform: capitalize;
}

.startButton {
  display: flex;
  align-items: center;
  gap: 0.75rem;
  padding: 1.5rem 2rem;
  background: var(--gradient-primary);
  color: white;
  border-radius: var(--radius-lg);
  font-size: 1.25rem;
  font-weight: 600;
  margin: 2rem auto 0;
  transition: var(--transition-normal);
  box-shadow: var(--shadow-lg);
}

.startButton:hover {
  transform: translateY(-2px);
  box-shadow: var(--shadow-xl);
}

.playingArea {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 2rem; /* Reduced gap */
  max-width: 600px;
  width: 100%;
}

.audioControls {
  display: flex;
  flex-direction: column;
  align-items: center;
  gap: 1.5rem;
}

.playButton {
  width: 80px;
  height: 80px;
  border-radius: 50%;
  background: var(--gradient-primary);
  color: white;
  display: flex;
  align-items: center;
  justify-content: center;
  transition: var(--transition-normal);
  box-shadow: var(--shadow-lg);
}

.playButton:hover {
  transform: scale(1.05);
  box-shadow: var(--shadow-xl);
}

.audioInfo {
  text-align: center;
}

.soundWaves {
  display: flex;
  gap: 0.25rem;
  justify-content: center;
  margin-bottom: 1rem;
}

.wave {
  width: 4px;
  height: 20px;
  background: var(--accent-primary);
  border-radius: 2px;
  opacity: 0.3;
}

.wave.animate {
  animation: waveAnimation 1.5s ease-in-out infinite;
}

@keyframes waveAnimation {
  0%, 100% { height: 20px; opacity: 0.3; }
  50% { height: 40px; opacity: 1; }
}

.guessForm {
  width: 100%;
}

.inputContainer {
  display: flex;
  gap: 0.75rem;
  width: 100%;
}

.guessInput {
  flex: 1;
  padding: 1rem 1.5rem;
  background: var(--bg-card);
  border: 2px solid var(--border-primary);
  border-radius: var(--radius-lg);
  color: var(--text-primary);
  font-size: 1.125rem;
  transition: var(--transition-normal);
}

.guessInput:focus {
  outline: none;
  border-color: var(--accent-primary);
  box-shadow: 0 0 0 3px rgba(99, 102, 241, 0.1);
}

.guessInput:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.submitButton {
  padding: 1rem 2rem;
  background: var(--gradient-success);
  color: white;
  border-radius: var(--radius-lg);
  font-weight: 600;
  transition: var(--transition-normal);
  white-space: nowrap;
}

.submitButton:hover:not(:disabled) {
  transform: translateY(-2px);
  box-shadow: var(--shadow-md);
}

.submitButton:disabled {
  opacity: 0.5;
  cursor: not-allowed;
}

.skipButton {
  padding: 0.75rem 1.5rem;
  background: transparent;
  color: var(--text-secondary);
  border: 1px solid var(--border-primary);
  border-radius: var(--radius-md);
  transition: var(--transition-normal);
}

.skipButton:hover {
  color: var(--text-primary);
  border-color: var(--accent-primary);
}

.loadingContainer,
.errorContainer {
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  min-height: 100vh;
  gap: 1rem;
}

.loadingSpinner {
  width: 40px;
  height: 40px;
  border: 3px solid var(--border-primary);
  border-top: 3px solid var(--accent-primary);
  border-radius: 50%;
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% { transform: rotate(0deg); }
  100% { transform: rotate(360deg); }
}

@media (max-width: 768px) {
  .container {
    padding: 0.5rem;
    justify-content: center; /* Center content vertically */
  }
  
  .header {
    flex-direction: row; /* Keep header horizontal */
    justify-content: space-between;
    padding: 1rem;
    gap: 1rem;
  }

  .gameInfo {
    position: absolute;
    left: 50%;
    transform: translateX(-50%);
    gap: 1rem;
  }
  
  .timer {
    display: none; /* Hide timer bar on mobile for space, text is enough */
  }
  
  .inputContainer {
    flex-direction: column;
    width: 100%;
  }
  
  .playButton {
    width: 70px;
    height: 70px;
  }

  .playingArea {
    gap: 1.5rem;
    padding: 0 1rem;
  }
}